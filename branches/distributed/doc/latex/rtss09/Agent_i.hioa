automaton $\auto{Agent_i}(\Delta:\Real, i:[N])$ where $\Delta > 0$
	signature
		input $\act{recv_{ji}}(x, v, u:\Real)$
		output $\act{send_{i}}(x, v, u:\Real)$
		
	variables
		input $x_i, x_g, v_i : \Real$;
		output $u_i:\Real := 0$;
		internal $\mathit{nbrs}_i \subseteq [N]$;
						 $\hat{x}, \hat{v}, \hat{u} : \mathit{nbrs}_i \mapsto \Real$;
						 $now_i :\Real := 0$;
						 $next_i :\Real := \Delta$;
						 $\mathit{buffer} : [N] \mapsto ( \Real \cup \{\perp\})^3$;
	
	transitions
		input $\act{recv_{ji}}(x, v, u)$
			eff $\mathit{buffer}[j] = <x, v, u>$;
					$\mathit{nbrs}_i = \mathit{nbrs}_i \cup \{j\}$;
					$\hat{x}[j] = x$;
					$\hat{v}[j] = v$;
					$\hat{u}[j] = u$;
		
		output $\act{send_i}(x, v, u)$
			pre $now_i = next_i \wedge x = x_i \wedge v = v_i \wedge u = u_i$;
			eff	$next_i = next_i + \Delta$;
					$u_i := ctrl(i, x_g, x_i, v_i, u_i, \hat{x}, \hat{v}, \hat{u}, \mathit{nbrs}_i)$;
					$\mathit{nbrs}_i = \{\}$;
					$sent_i = T$;
	
	trajectories
		trajdef $\smodel{hold}$ 
 			evolve    $d(now_i) = 1$;
 			stop when $now_i = next_i$;